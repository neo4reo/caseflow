#!groovy

// modifications from Jenkinsfile in master:
// - removed DEPLOY_MESSAGE (used in prod)
// - hard-coded non-master DEPLOY_BRANCH
// - hard-coded APP_VERSION to env.BRANCH_NAME

// The application name as defined in appeals-deployment aws-config.yml
def APP_NAME = 'certification';
def APP_VERSION = env.BRANCH_NAME
def DEPLOY_BRANCH = 'lisac-caseflow-infinite-envs'

/************************ Common Pipeline boilerplate ************************/

def commonPipeline;
node('deploy') {

  // withCredentials allows us to expose the secrets in Credential Binding
  // Plugin to get the credentials from Jenkins secrets.
  withCredentials([
    [
      // Token to access the appeals deployment repo.
      $class: 'StringBinding',
      credentialsId : 'GIT_CREDENTIAL',
      variable: 'GIT_CREDENTIAL',
    ]
  ])
  {
    // Clean up the workspace so that we always start from scratch.
    stage('cleanup') {
      step([$class: 'WsCleanup'])
    }

    // Checkout the deployment repo for the ansible script. This is needed
    // since the deployment scripts are separated from the source code.
    stage ('pull-deploy-repo') {

      sh "git clone -b $DEPLOY_BRANCH https://${env.GIT_CREDENTIAL}@github.com/department-of-veterans-affairs/appeals-deployment"
      dir ('./appeals-deployment/ansible') {
        // The commmon pipeline script should kick off the deployment.
        commonPipeline = load "../jenkins/caseflow-docker-pipeline.groovy"
      }
    }
  }
}

// Execute the common pipeline.
// Note that this must be outside of the node block since the common pipeline
// runs another set of stages.
commonPipeline.deploy(APP_NAME, APP_VERSION);
